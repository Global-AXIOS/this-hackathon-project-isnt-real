We first used javascript using Google Vision API to teach ourselves how it works and after that we decided to use C# to create this program.  
  
  
 Using C# and old tutorials from years ago. 
  
 App using FlutterSMS integration using TwilioFacial Recognition using Microsoft AzureBackend/Database using Google Firebase 
 We first used javascript using Google Vision API to teach ourselves how it works and after that we decided to use C# to create this program.  
  
  
 Using C# and old tutorials from years ago. 
  
 App using FlutterSMS integration using TwilioFacial Recognition using Microsoft AzureBackend/Database using Google Firebase 
 We began with basic website code that we had written in glitch previously and modified it to fit with the theme. We then created and enhanced our scratch games. Finally, we embedded our scratch projects into our website . 
  
  
 This app was built using the app builder Thunkable, a blocky app builder that works on Android and Apple phones. The Firebase database was used for authentication and will be used to store notes from the user in the future. The girls coded a web page using HTML, where they embedded a Scratch game. The Scratch game is the game that will be used to teach children about the importance of money.  
 We used HTML, scratch, and CSS for the code to create this website. 
  
  
  
  
 I used the hosted skill option with NodeJS, as this is significantly faster that using the ask-cli, and waiting for node modules to upload from my PC in Australia to the US. The alexa console online is actually pretty good for dev.I have sound files hosted on the S3 account associated with the skill.I host a backend on a VM in AWS, which is written in Laravel/PHP to provide geo data to the game via a set of API calls. I use some PostreSQL GIS methods and some NodeJS hosted functions to calculate directions, distances and to find nearby cities for clues.I record games in a PostgreSQL database, and use this to display a map of user games, and a leader board. 
  
  
 