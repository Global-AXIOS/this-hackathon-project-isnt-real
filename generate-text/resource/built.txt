 We use C++ and some input files for text for the quiz. Based on Spark AR Java IDE from Eclipse  We used the godotengine.org with the https://godotengine.org/asset-library/asset/215 for the majority of development work. Version control was performed using Github. Planning and note taking were done collaboratively over google docs. The audio was cut and reformatted using Audacity. As far as division of labor was concerned, Ethan handled nearly all of the important code elements, as well as the creation of particle effects. Matt was in charge of multiple miscellaneous tasks, including the creation of the debugging UI, location of the sound effects, and the composition of the write up.    Using python and the Atom text editor.  Website with calculations done in python  On account creation, the users can select from a list of interests they have. They also answer a few questions to determine where they lie on the political spectrum. The questions are binary, thus the user either moves farther "left" or "right" with each answer. This is done via Google Forms, which in turn spits out the data to a Google Sheet. A Python script harvests the data and creates user documents on our MongoDB.A (text) chat session is created for two users that have overlapping interests but lie on opposing sides of the spectrum. The users are free to speak with each other for however long they desire.After a chat session is complete, a Python script interfacing with the GCP APIs sends the chat log off for processing. Google returns information regarding the sentiment of the log, which we condense to a number that denotes how successful the interaction was and how much "change" to reward the two users.The crypto-currency was built from a small implementation known as "NaiveCoin." It runs on an Ubuntu VM from GCP.    The project uses an Arduino Uno and a Raspberry Pi. They will both be housed in a box, attached to a tree. The Arduino will be connected to a microphone, and will use its built-in LED, and the Raspberry Pi will be connected to a GPS module, a Wifi module, and a light sensor on a breadboard. When the microphone on the Arduino senses a chainsaw, it will activate the LED, which will trigger the light sensor on the Raspberry Pi. When the light sensor is triggered, it will use the Wifi Module to send an email to the Forest Service, which will include the coordinates picked up by the GPS. We believe this is an appropriate and effective use of technology, given that all the components are relatively inexpensive, small, and easy to procure, meaning it will not be difficult to widely implement it.  We used html, css, and javascript XCode 